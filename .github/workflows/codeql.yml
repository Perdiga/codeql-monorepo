name: "CodeQL"

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  schedule:
    - cron: "39 18 * * 6"
  workflow_dispatch:

jobs:
  changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      projects: ${{ steps.build-languages.outputs.result }}
    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            advanced-security-c:
              - 'advanced-security-c/**'
            advanced-security-cpp:
              - 'advanced-security-cpp/**'  
            advanced-security-csharp:
              - 'advanced-security-csharp/**'
            advanced-security-csharp-low:
              - 'advanced-security-csharp-low/**'
            advanced-security-go:
              - 'advanced-security-go/**'
            advanced-security-python:
              - 'advanced-security-python/**'
            advanced-security-java:
              - 'advanced-security-java/**'
            advanced-security-javascript:
              - 'advanced-security-javascript/**'
            advanced-security-ruby:
              - 'advanced-security-ruby/**'
            advanced-security-swift:
              - 'advanced-security-swift/**'
      - uses: actions/github-script@v6
        id: build-languages
        env:
          filter: ${{ toJson(steps.filter.outputs) }}
        with:
          script: |
            const filter = JSON.parse(process.env.filter)
            const changes = JSON.parse(filter.changes)
            const config = {
              go: [
                'advanced-security-go'
              ],
              python: [
                'advanced-security-python'
              ],
              csharp: [
                'advanced-security-csharp'
                'advanced-security-csharp-low'
              ],
              java: [
                'advanced-security-java'
              ],
              javascript: [
                'advanced-security-javascript'
              ],
              ruby: [
                'advanced-security-ruby'
              ],
              swift: [],
              'c-cpp': [
                'advanced-security-c',
                'advanced-security-cpp'
              ],
            }

            const projects = changes.map((change) => {
              return {
                languages: Object.entries(config).filter(([language, paths]) => paths.includes(change)).map(([language]) => language),
                path: change
              }
            });
            return {
              projects,
              length: changes.length,
              languages: projects.reduce((acc, project) => {
                project.languages.forEach((language) => {
                  if (!acc.includes(language)) {
                    acc.push(language)
                  }
                })
                return acc
              }, [])
            }

  analyze:
    name: Analyze
    needs: changes # <== REQUIRED
    if: ${{ fromJson(needs.changes.outputs.projects).length > 0 }}
    runs-on: ${{ (matrix.project.languages[0] == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
    timeout-minutes: ${{ (matrix.project.languages[0] == 'swift' && 120) || 360 }}
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        project: ${{ fromJson(needs.changes.outputs.projects).projects }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          sparse-checkout: ${{ matrix.project.path }}

      # Initializes the CodeQL tools for scanning.
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ join(matrix.project.languages, ',') }}
          config: |
            paths:
              - '${{ matrix.project.path }}'

      # Autobuild attempts to build any compiled languages (C/C++, C#, or Java).
      - name: Autobuild
        # if path is not advanced-security-c then use the autobuild
        if: ${{ matrix.project.path != 'advanced-security-c' }}
        uses: github/codeql-action/autobuild@v3

      - name: Manual Build
        # if path is advanced-security-c then use the manual build
        if: ${{ matrix.project.path == 'advanced-security-c' }}
        run: |
          # Add your manual build commands here
          cd ${{ matrix.project.path }} && make

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{ matrix.project.languages[0] }}"
