# For most projects, this workflow file will not need changing; you simply need
# to commit it to your repository.
#
# You may wish to alter this file to override the set of languages analyzed,
# or to provide custom queries or build logic.
#
# ******** NOTE ********
# We have attempted to detect the languages in your repository. Please check
# the `language` matrix defined below to confirm you have the correct set of
# supported CodeQL languages.
#
name: "CodeQL"

on:
  push:
    branches: [ "main" ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ "main" ]
  schedule:
    - cron: '39 18 * * 6'

jobs:
  changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      advanced-security-csharp: ${{ steps.filter.outputs.advanced-security-csharp }}
      advanced-security-go: ${{ steps.filter.outputs.advanced-security-go }}
      advanced-security-python: ${{ steps.filter.outputs.advanced-security-python }}
      languages: ${{ steps.build-languages.outputs.languages }}
      languages_length: ${{ steps.build-languages.outputs.languages_length }}
    steps:
    - uses: actions/checkout@v3
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          advanced-security-csharp:
            - 'advanced-security-csharp/**'
          advanced-security-go:
            - 'advanced-security-go/**'
          advanced-security-python:
            - 'advanced-security-python/**'
    - id: build-languages
      run: |
        languages=()
        if [ "${{ steps.filter.outputs.advanced-security-csharp }}" = "true" ]; then
          languages+=('csharp')
        fi
        if [ "${{ steps.filter.outputs.advanced-security-go }}" == "true" ]; then
          languages+=('go')
        fi
        if [ "${{ steps.filter.outputs.advanced-security-python }}" = "true" ]; then
          languages+=('python')
        fi

        languages_str=$(IFS=,; echo "${languages[*]}")
        
        echo "::set-output name=languages::${languages_str}"
        echo "::set-output name=languages_length::${#languages[@]}"
    - run: echo "${{ toJson(steps.build-languages.outputs) }}"

  print:
    runs-on: ubuntu-latest
    needs: changes
    steps:
    - run: |
        echo "${{ toJson(needs.changes.outputs) }}"

  analyze:
    name: Analyze
    needs: changes # <== REQUIRED
    if: ${{ needs.changes.outputs.languages_length > 0 }}
    # Runner size impacts CodeQL analysis time. To learn more, please see:
    #   - https://gh.io/recommended-hardware-resources-for-running-codeql
    #   - https://gh.io/supported-runners-and-hardware-resources
    #   - https://gh.io/using-larger-runners
    # Consider using larger runners for possible analysis time improvements.
    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
    timeout-minutes: ${{ (matrix.language == 'swift' && 120) || 360 }}
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: ${{ fromJson(needs.changes.outputs.languages) }}
        # CodeQL supports [ 'c-cpp', 'csharp', 'go', 'java-kotlin', 'javascript-typescript', 'python', 'ruby', 'swift' ]
        # Use only 'java-kotlin' to analyze code written in Java, Kotlin or both
        # Use only 'javascript-typescript' to analyze code written in JavaScript, TypeScript or both
        # Learn more about CodeQL language support at https://aka.ms/codeql-docs/language-support

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}
        # If you wish to specify custom queries, you can do so here or in a config file.
        # By default, queries listed here will override any specified in a config file.
        # Prefix the list here with "+" to use these queries and those in the config file.

        # For more details on CodeQL's query packs, refer to: https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs
        # queries: security-extended,security-and-quality


    # Autobuild attempts to build any compiled languages (C/C++, C#, Go, Java, or Swift).
    # If this step fails, then you should remove it and run the build manually (see below)
    - name: Autobuild
      uses: github/codeql-action/autobuild@v2

    # ‚ÑπÔ∏è Command-line programs to run using the OS shell.
    # üìö See https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstepsrun

    #   If the Autobuild fails above, remove it and uncomment the following three lines.
    #   modify them (or add more) to build your code if your project, please refer to the EXAMPLE below for guidance.

    # - run: |
    #     echo "Run, Build Application using script"
    #     ./location_of_script_within_repo/buildscript.sh

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      with:
        category: "/language:${{matrix.language}}"

